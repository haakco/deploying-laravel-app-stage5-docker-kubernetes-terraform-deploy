---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rediscommander
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 12h"
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: rediscommander
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: rediscommander
    spec:
      containers:
        - name: rediscommander
          image: rediscommander/redis-commander:latest
          ports:
            - containerPort: 8081
          env:
            - name: REDIS_HOST
              value: $REDIS_HOST
            - name: REDIS_PASSWORD
              value: $REDIS_PASS
            - name: K8S_SIGTERM
              value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: rediscommander
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: 8081
  selector:
    app: rediscommander
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: rediscommander
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: traefik-traefik-auth@kubernetescrd,traefik-traefik-compress@kubernetescrd
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  tls:
    - hosts:
        - rediscommander.$DOMAIN
      secretName: rediscommander-cert-tls
  rules:
    - host: rediscommander.$DOMAIN
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rediscommander
                port:
                  number: 8081

